{"version":3,"file":"paragraph.js","sourceRoot":"./","sources":["handlers/paragraph.ts"],"names":[],"mappings":"AAAA,OAAO,MAA4B,MAAM,QAAQ,CAAC;AAGlD,MAAM,gBAAgB,GAAG,CAAC,MAAkB,EAAW,EAAE,CACxD,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE;IAClB,MAAM,KAAK,GAAG,CAAe,CAAC;IAE9B,OAAO,KAAK,CAAC,IAAI,KAAK,MAAM,IAAI,KAAK,CAAC,IAAI,KAAI,MAAM,CAAC;AACtD,CAAC,CAAC,CAAC;AAGJ;;;GAGG;AACH,MAAM,SAAS,GAA0B,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE;IACvD,MAAM,EAAE,IAAI,EAAE,GAAG,CAAqB,CAAC;IAEvC,2EAA2E;IAC3E,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC;QACxC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;IAEjD,IAAI,gBAAgB,CAAE,CAAS,CAAC,MAAoB,CAAC,EAAE;QACtD,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,IAAI,CAC7C,MAAM,CAAC,MAAM,CAAE,CAAS,CAAC,MAAoB,CAAC,CAC9C,CAAC;KACF;SACI;QACJ,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACrD;IAED,OAAO,KAAK,CAAC;AACd,CAAC,CAAC;AAEF,eAAe,SAAS,CAAC","sourcesContent":["import marked, {TokensList, Tokens} from \"marked\";\nimport {DefaultElementHandler, FixedToken} from \"../types\";\n\nconst tokensLinkOrText = (tokens: TokensList): boolean =>\n\t!tokens.find((t) => {\n\t\tconst token = t as FixedToken;\n\n\t\treturn token.type === \"text\" || token.type ===\"link\";\n\t});\n\n\n/**\n * Paragraph elements are translated into notes and fed to the optionally\n * visible notes window\n */\nconst paragraph: DefaultElementHandler = (t, context) => {\n\tconst { text } = t as Tokens.Paragraph;\n\n\t// Not -1 here since we push new sections on after they are done processing\n\tcontext.notes[context.newSections.length] =\n\t\tcontext.notes[context.newSections.length] || [];\n\n\tif (tokensLinkOrText((t as any).tokens as TokensList)) {\n\t\tcontext.notes[context.newSections.length].push(\n\t\t\tmarked.parser((t as any).tokens as TokensList)\n\t\t);\n\t}\n\telse {\n\t\tcontext.notes[context.newSections.length].push(text);\n\t}\n\n\treturn false;\n};\n\nexport default paragraph;\n"]}